import { NewsPayload, PhotoPayload } from '../index';
/**
 * Static utilities that interface with National Geographic Picture of the Day and Latest News API.
 */
export declare class NationalGeographicAPI {
    private static DEFAULT_PAGE_SIZE;
    private static DEFAULT_PAGE_NUMBER;
    private static oneDayMillis;
    /**
     * Function that returns the latest news from National Geographic. Can retrieve articles in 'pages', not only the
     * the very latest articles given combination of `pageSize` and `pageNumber`. If no `pageSize` or `pageNumber` is
     * provided, it returns the latest 3 news articles
     *
     * Supports both Promise and callback based returning of result. If no callback is provided, it returns Promise with
     * result.
     * @param pageSize - The number of articles to be returned from query. Defaults to 3.
     * @param pageNumber - The page number to retrieve, works in conjunction with `pageSize` to determine data.
     * @param cb - Optional callback otherwise Promise based return.
     * @return {Promise<NewsPayload[]> | void}
     */
    static getLatestNews(pageSize?: number, pageNumber?: number, cb?: Function): Promise<NewsPayload[]> | void;
    /**
     * Function that returns the latest Photo of the Day from National Geographic. Can retrieve today's or any day in
     * the past photo up to January 1st 2009 when Photo of the Day begins. Date can be in millis or UTC string.
     *
     * If there is no photo posted for the day yet due to timezone differences, it will retrieve the previous days photo
     * until today's one is posted.
     *
     * Supports both Promise and callback based returning of result. If no callback is provided, it returns Promise with
     * result.
     *
     * @param day - The historical day to retrieve data for. Defaults to retrieving today's photo.
     * @param cb - Optional callback otherwise Promise based return.
     * @return {Promise<PhotoPayload | void>}
     */
    static getPhotoOfDay(day?: number | string | Function, cb?: Function): Promise<PhotoPayload | void>;
    private static sendResponse(result, callback);
    private static getYesterdayPhoto(callback);
    private static getPayload(url);
    private static getCallback(numberOfArguments, pageSize, pageNumber, cb?);
    private static getPhotoUrl(day);
}
